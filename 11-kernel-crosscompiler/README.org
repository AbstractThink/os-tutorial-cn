[[file:./README_en.md][English]]

/事先需要 Google 的概念：cross-compiler(交叉编译器)/

*目标：创造一个可以构建你自己的内核的开发环境*

如果你使用 Mac, 你将可以直接完成这个过程。否则，可能要再等几节课。无论如何，一旦我们跳转到高级语言开发，你必须要有一个交叉编译环境，例如 C 语言。

我将适配 OSDev wiki 中的环境。

** 必要的安装包
首先，安装必要包。在 Linux 上，用你的包管理工具。在 Mac 上，如果你在 =00= 课程没有安装 =brew= ,先安装它，接着使用 =brew= 安装以下包：

- gmp
- mpfr
- libmpc
- gcc

是的，我们需要 =gcc= 编译我们的交叉编译工具 =gcc= , 尤其是 Mac, =gcc= 已经被 =clang= 弃用了。

安装完之后，找到你的包在哪里（记住，不是 clang) 并 =export= 。例如：
#+BEGIN_SRC sh
export CC=/usr/local/bin/gcc-4.9
export LD=/usr/local/bin/gcc-4.9
#+END_SRC

我们需要构建 =binutils= 和 =交叉编译过的 gcc=, 我们将它们放在 =/usr/local/i386elfgcc= 中，因此，继续 =export= 一些路径。可以根据你的爱好自由修改：
#+BEGIN_SRC sh
export PREFIX="/usr/local/i386elfgcc"
export TARGET=i386-elf
export PATH="$PREFIX/bin:$PATH"
#+END_SRC

** binutils
记住：从网上复制文本粘贴时需要留意。我建立一行一行的复制。
#+BEGIN_SRC sh
mkdir /tmp/src
cd /tmp/src
curl -O http://ftp.gnu.org/gnu/binutils/binutils-2.24.tar.gz # If the link 404's, look for a more recent version
tar xf binutils-2.24.tar.gz
mkdir binutils-build
cd binutils-build
../binutils-2.24/configure --target=$TARGET --enable-interwork --enable-multilib --disable-nls --disable-werror --prefix=$PREFIX 2>&1 | tee configure.log
make all install 2>&1 | tee make.log
#+END_SRC

** gcc
#+BEGIN_SRC sh
cd /tmp/src
curl -O https://ftp.gnu.org/gnu/gcc/gcc-4.9.1/gcc-4.9.1.tar.bz2
tar xf gcc-4.9.1.tar.bz2
mkdir gcc-build
cd gcc-build
../gcc-4.9.1/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --disable-libssp --enable-languages=c --without-headers
make all-gcc
make all-target-libgcc
make install-gcc
make install-target-libgcc
#+END_SRC

这样，你应该已经有 =GNU binutils= 和编译器 =/usr/local/i386elfgcc/bin= 了，前缀 =i386-elf-= 是为了防止和你系统上的编译器以及 =binutils= 相冲突。

我或许想将它们加入 =$PAT= 中。学习完这个教程后，我们在使用交叉编译 =gcc= 时, 将明确使用这些前缀。
